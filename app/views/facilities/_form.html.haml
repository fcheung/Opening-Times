- @onload = "initialize();" # sf();"
- content_for :head do
  = javascript_include_tag :all

= error_messages_for :facility

- form_for @facility, :html => { :name => 'f' } do |facility_form|
  %small
    * Mandatory field

  %fieldset
    %legend Business information
    %table.inputFormTable
      %tr
        %th= label  :facility, :name, 'Name', :class => "mandatory"
        %td= facility_form.text_field :name, :class => "fullWidth"
        %td.hint The name of shop, business, etc.
      %tr
        %th= label :facility, :location, 'Location', :class => "mandatory"
        %td= facility_form.text_field :location, :class => "fullWidth"
        %td.hint Most general first, i.e. London, Battersea
      %tr
        %th= label :facility, :address, 'Address', :class => "mandatory"
        - @facility.address = commas_to_line_breaks(@facility.address)
        %td= facility_form.text_area :address, :rows => 3, :cols => 30, :onchange => "initialGeocode();"
      %tr
        %th= label :facility, :postcode, 'Postcode', :class => "mandatory"
        %td
          = facility_form.text_field :postcode, :size => 8, :onchange => "initialGeocode();"
          %a{ :onclick => "updateMap();" } Update map location
      %tr
        %th Map
        %td.hint
          Please drag the marker to point to the main entrance.
          = render 'map_edit'
        %td.hint
          %table.layout{ :style=>"margin-top: 8px" }
            %tr
              %td= label :facility, :lat, "Latitude", :class => "mandatory"
              %td= facility_form.text_field :lat, :size => 15, :class=>'shy'
            %tr
              %td= label :facility, :lng, "Longitude", :class => "mandatory"
              %td= facility_form.text_field :lng, :size => 15, :class=>'shy'
      %tr
        %th= label :facility, :phone, 'Phone'
        %td= facility_form.text_field :phone, :size => 13
      %tr
        %th= label :facility, :email, 'Email'
        %td= facility_form.text_field :email, :class => "fullWidth"
      %tr
        %th= label :facility, :url, 'Website'
        %td= facility_form.text_field :url, :class => "fullWidth"
        %td.hint Further info from official website
  %br
  %fieldset
    %legend Normal opening times

    = error_messages_for 'normal opening', :object => @facility.normal_openings

    %small
      %ul
        %li Leave blank any days when the business is closed.
        %li
          See
          = link_to('how to enter closed for lunch or open past midnight', multipleopenings_path, :target => "_blank")
        %li You can also type midnight (for 12AM), and midday (for 12PM)


    %table#normalOpenings.openingsForm
      %tr
        %th{ :scope => 'col' } Day
        %th{ :scope => 'col' } Opens
        %th{ :scope => 'col' } Closes
        %th{ :scope => 'col' }
          %label.optional Comment
      - facility_form.fields_for :normal_openings do |opening_form|
        - next if opening_form.object.marked_for_destruction?
        %tr.normal_opening
          %td= opening_form.select :week_day, Opening::DAYNAMES
          %td= opening_form.text_field :opens_at, :size => 5, :maxlength => 7
          %td= opening_form.text_field :closes_at, :size => 5, :maxlength => 7
          %td= opening_form.text_field :comment
          %td.action
            = remove_link_unless_new_record(opening_form)
        =# render :partial => 'form_normal_opening', :locals => { :ff => opening_form, :normal_opening => opening_form.object }

    %p= add_normal_opening_link("Add normal opening", facility_form)

  %br
  %fieldset
    %legend Bank Holiday opening times

    %p
      %small
        Please select which set of bank holidays this business follows.
        = link_to('See a list of upcoming bank holidays for each area', bankholidays_path, :target => "_blank") + '.'

    %p
      - HolidaySet.all.each_with_index do |h_set, index|
        = facility_form.radio_button :holiday_set_id, h_set.id, :checked => (index == 0)
        = facility_form.label "holiday_set_id_#{h_set.id}", h(h_set.name)
        %br

    = error_messages_for 'holiday_openings', :object => @facility.holiday_openings

    %table#holidayOpenings.openingsForm
      %tr
        %th
        %th{ :scope => 'col' } Opens
        %th{ :scope => 'col' } Closes
        %th{ :scope => 'col' }
          %label.optional Comment
      - facility_form.fields_for :holiday_openings do |opening_form|
        - next if opening_form.object.marked_for_destruction?
        %tr.holiday_opening
          %td
            = opening_form.check_box :closed?, :onclick => "this.disable"
            = opening_form.label :closed?, 'Closed'
          %td= opening_form.text_field :opens_at, :size => 5, :maxlength => 7
          %td= opening_form.text_field :closes_at, :size => 5, :maxlength => 7
          %td= opening_form.text_field :comment
          %td.action
            = remove_link_unless_new_record(opening_form)
        =# render :partial => 'form_holiday_opening', :locals => { :ff => opening_form, :holiday_opening => opening_form.object }

    %p= add_holiday_opening_link("Add holiday opening", facility_form)

  - unless @facility.new_record?
    %p
      = label :facility, :comment, 'Edit summary'
      %small (optional - briefly describe the changes you have made)
      %br
      = facility_form.text_field :comment, :class => "fullWidth"

  = facility_form.hidden_field :retired?

  - button_text = @facility.new_record? ? 'Create' : 'Update'
  %p= submit_tag button_text, :class=>'button tick', :disable_with => "Please wait..."

  %p
    %small By submitting you irrevocably agree to release your contributions under the <a href="http://creativecommons.org/licenses/by-sa/3.0/">Creative Commons Attribution/Share-Alike License 3.0</a>.

